name: Deploy Full Stack Project

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Set up .env file
      - name: Create .env file
        run: |
          echo "MONGO_URI=mongodb://localhost:27017/mydatabase" > .env

      # Install root dependencies
      - name: Install Root Dependencies
        run: npm install

      # Install server dependencies
      - name: Install Server Dependencies
        run: |
          cd Server
          npm install

      # Start server
      - name: Start Server
        run: |
          cd Server
          nohup npm start &
        env:
          MONGO_URI: mongodb://localhost:27017/mydatabase

      # Install client dependencies
      - name: Install Client Dependencies
        run: |
          cd eduPlatform
          npm install

      # Build the client
      - name: Build Client
        run: |
          cd eduPlatform
          npm run build -- --base=/EduPlatform-MinzLong/

      # Archive the build artifacts
      - name: Archive artifact
        shell: sh
        run: |
          tar \
            --dereference --hard-dereference \
            --directory "eduPlatform/dist" \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .

      # Upload the build artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
